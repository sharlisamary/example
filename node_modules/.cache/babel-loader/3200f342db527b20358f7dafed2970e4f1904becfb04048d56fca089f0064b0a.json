{"ast":null,"code":"var _jsxFileName = \"/home/arun/Sharly/MyApp/src/Gymform.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react'\n// const Weightage = () => {\n//     const [name, setName] = useState('')\n//     const [address, setAddress] = useState('')\n//     const [currentWeight, setCurrentWeight] = useState('');\n//     const [desiredWeight, setDesiredWeight] = useState('');\n//     const [height, setHeight] = useState('');\n//     const [issubmit, setIssubmit] = useState(false)\n//     const [form, setForm] = useState([]);\n//     const [selectedOption, setSelectedOption] = useState(false);\n//     const [editIndex, setEditIndex] = useState(false);\n//     const [editName, setEditName] = useState('');\n//     const [editAddress, setEditAddress] = useState('');\n//     const [editCurrentWeight, setEditCurrentWeight] = useState('');\n//     const [editDesiredWeight, setEditDesiredWeight] = useState('');\n//     const [editHeight, setEditHeight] = useState('')\n\n//     const handleSubmit = () => {\n//         setIssubmit(true)\n//         if (currentWeight > 100) {\n//             alert(\" current weight Not Greater than 100\")\n//         }\n\n//         else if (currentWeight < 100) {\n//             if (name === '') {\n//                 alert(\"member name is not filled\")\n\n//             }\n//             if (height > 600) {\n//                 alert(\"Height enterd in centemeter\")\n\n//             }\n//             if (desiredWeight > 100) {\n//                 alert(\"desired weight Not Greater than 100\")\n//             }\n//             if (address == null) {\n//                 alert(\"please entered valid address\")\n//             }\n//             if ((name !== '') && (address !== '') && (currentWeight !== '') && (desiredWeight !== '') && (height !== '')) {\n//                 weightArray.push(parseInt(currentWeight))\n//                 console.log(weightArray)\n//                 const user = { name, address, currentWeight, desiredWeight, height };\n//                 setForm([...form, user]);\n//                 setName('');\n//                 setAddress('');\n//                 setCurrentWeight('');\n//                 setDesiredWeight('');\n//                 setHeight('')\n//             }\n\n//         }\n//     };\n\n//     const handleOption = (index) => {\n//         const updatedForm = [...form]\n//         updatedForm[index].selectedOption = !updatedForm[index].selectedOption;\n//         setForm(updatedForm)\n//         setSelectedOption(!selectedOption);\n//     };\n\n//     const handleDelete = (index) => {\n//         const updatedForm = [...form];\n//         updatedForm.splice(index, 1);\n//         setForm(updatedForm);\n\n//     };\n\n//     const handleEdit = () => {\n//         if (editCurrentWeight > 100) {\n//             alert('Weightage count not greater than 100');\n//         } else if (editCurrentWeight < 100) {\n//             if ((editName !== \"\") && (editAddress !== \"\") && (editCurrentWeight !== \"\") && (editDesiredWeight !== \"\") && (editHeight !== \"\")) {\n//                 const updatedForm = [...form];\n//                 updatedForm[editIndex] = {\n//                     name: editName,\n//                     address: editAddress,\n//                     currentWeight: editCurrentWeight,\n//                     desiredWeight: editDesiredWeight,\n//                     height: editHeight\n\n//                 };\n//                 setForm(updatedForm);\n//                 setEditIndex(false);\n//                 setEditName('');\n//                 setEditAddress('');\n//                 setEditCurrentWeight('');\n//                 setEditDesiredWeight('');\n//                 setEditHeight('');\n//             }\n//         }\n//     };\n\n//     const handleEditProcess = (index) => {\n//         if (index !== false) {\n//             setEditIndex(index);\n//             const editedItem = form[index];\n//             setEditName(editedItem.name);\n//             setEditAddress(editedItem.email);\n//             setEditCurrentWeight(editedItem.currentWeight);\n//             setEditDesiredWeight(editedItem.desiredWeight);\n//             setEditHeight(editedItem.height);\n//             setSelectedOption(!selectedOption);\n\n//         }\n//     }\n\n//     return (\n//         <>\n\n//             <div className=\"container-fluid m-3 bg-lite \">\n//                 <div className=\"column\">\n//                     <div className=\"mt-5\">\n//                         <h2>GYM Membership Form</h2>\n//                         <div className='row mt-5 '>\n//                             <div className='column m-3'>\n//                                 <label className=\"d-flex  align-items-center\">Name:</label>\n//                                 <input type='text' value={editIndex !== false ? editName : name} onChange={(e) => (editIndex !== false ? setEditName(e.target.value) : setName(e.target.value))}></input>\n//                             </div>\n\n//                             <div className='column m-3'>\n//                                 <label className=\"d-flex  align-items-center \">CurrentWeight (kg)*:</label>\n//                                 <input value={editIndex !== false ? editCurrentWeight : currentWeight} type='number' onChange={(e) => (editIndex !== false ? setEditCurrentWeight(e.target.value) : setCurrentWeight(e.target.value))}></input>\n//                             </div>\n\n//                             <div className='column m-3'>\n//                                 <label className=\"d-flex  align-items-center \">Height in(cm)*:</label>\n//                                 <input value={editIndex !== false ? editHeight : height} type='number' onChange={(e) => (editIndex !== false ? setEditHeight(e.target.value) : setHeight(e.target.value))}></input>\n//                             </div>\n\n//                         </div>\n//                         <div className='w-30 h-30 d-flex' >\n\n//                             <button className='btn btn-primary' onClick={editIndex !== false ? handleEdit : handleSubmit} type='submit' >{editIndex !== false ? 'UPDATE' : 'SUBMIT'}</button>\n\n//                         </div>\n\n//                     </div>\n//                     <div className=\"col-12 mt-5\" >\n//                         <table className='table'>\n\n//                             <tr className='table-active'>\n//                                 <th >Name</th>\n//                                 <th >CurrentWeight</th>\n//                                 <th> Height </th>\n\n//                             </tr>\n\n//                             {issubmit && form.map((item, index) => {\n\n//                                 return (\n//                                     <tbody >\n//                                         <tr >\n//                                             <td >{item.name} </td>\n//                                             <td >{item.currentWeight}</td>\n//                                             <td >{item.height}</td>\n//                                             <tr>\n//                                                 <div onClick={() => { handleOption(index); }}>\n//                                                     <img alt='three dots' src='https://w7.pngwing.com/pngs/948/504/png-transparent-computer-icons-material-design-hamburger-button-menu-menu-text-rectangle-computer-wallpaper-thumbnail.png' height='20' width='20'></img></div>\n//                                                 {item.selectedOption &&\n//                                                     <div className='menu-options'>\n//                                                         <div className='option' onClick={() => handleEditProcess(index)}>Edit</div>\n//                                                         <div className='option' onClick={() => handleDelete(index)}>Delete</div>\n//                                                     </div>\n//                                                 }\n\n//                                             </tr>\n//                                         </tr>\n//                                     </tbody>\n//                                 )\n//                             })}\n\n//                         </table>\n//                     </div>\n//                 </div>\n\n//             </div>\n//         </>\n\n//     )\n// }\n// export default Weightage;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Formfilled() {\n  _s();\n  let user = {};\n  const [arr, setArr] = useState([]);\n  const [editIndex, setEditIndex] = useState(false);\n  const [issubmit, setIssubmit] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(false);\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(user);\n    setArr([...arr, user]);\n    user = {\n      name: \"\",\n      currentWeight: \"\",\n      height: \"\"\n    };\n    setIssubmit(true);\n    if (user.currentWeight > 100) {\n      alert(\" current weight Not Greater than 100\");\n    }\n    if (user.currentWeight < 100) {\n      if (user.name === '') {\n        alert(\"member name is not filled\");\n      }\n      if (user.height > 600) {\n        alert(\"Height enterd in centemeter\");\n      }\n    }\n  };\n  console.log(arr);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(name);\n    user[name] = value;\n  }\n  function handleWeightChange(e) {\n    const {\n      name\n    } = e.target;\n    if (e.target.value.length > e.target.maxLength) {\n      e.target.value = e.target.value.slice(0, e.target.maxLength);\n      user[name] = e.target.value;\n    }\n  }\n  function handleEdit(e) {\n    e.preventDefault();\n    setArr([...arr, user]);\n    user = {\n      editName: \"\",\n      editCurrentWeight: \"\",\n      editHeight: \"\"\n    };\n    setEditIndex(false);\n  }\n  const handleOption = index => {\n    const updatedForm = [...arr];\n    updatedForm[index].selectedOption = !updatedForm[index].selectedOption;\n    setArr(updatedForm);\n    setSelectedOption(!selectedOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid m-3 bg-lite \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"GYM Membership Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-5 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column m-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"d-flex  align-items-center\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: user.name,\n              maxLength: 15,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column m-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"d-flex  align-items-center \",\n              children: \"CurrentWeight (kg)*:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"currentWeight\",\n              value: user.currentWeight,\n              maxLength: 2,\n              onChange: handleWeightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column m-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"d-flex  align-items-center \",\n              children: \"Height in(cm)*:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"height\",\n              value: user.height,\n              maxLength: 3,\n              onChange: handleWeightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-30 h-30 d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: editIndex !== false ? handleEdit : handleSubmit,\n            type: \"submit\",\n            children: editIndex !== false ? 'UPDATE' : 'SUBMIT'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 mt-5\",\n        children: [\"//                         \", /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [\"//                             \", /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-active\",\n            children: [\"//                                 \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 36\n            }, this), \"//                                 \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CurrentWeight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 36\n            }, this), \"//                                 \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Height \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 36\n            }, this), \"//                             \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 32\n          }, this), \"//                             \", issubmit && arr.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.currentWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.height\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => {\n                      handleOption(index);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      alt: \"three dots\",\n                      src: \"https://w7.pngwing.com/pngs/948/504/png-transparent-computer-icons-material-design-hamburger-button-menu-menu-text-rectangle-computer-wallpaper-thumbnail.png\",\n                      height: \"20\",\n                      width: \"20\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 37\n                  }, this), item.selectedOption && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"menu-options\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"option\",\n                      onClick: () => handleEditProcess(index),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"option\",\n                      onClick: () => handleDelete(index),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 25\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n}\n_s(Formfilled, \"/PvrHHoEE1jrUxcWS9lcDNjk1pk=\");\n_c = Formfilled;\nexport default Formfilled;\nvar _c;\n$RefreshReg$(_c, \"Formfilled\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Formfilled","_s","user","arr","setArr","editIndex","setEditIndex","issubmit","setIssubmit","selectedOption","setSelectedOption","handleSubmit","event","preventDefault","console","log","name","currentWeight","height","alert","handleChange","value","target","handleWeightChange","e","length","maxLength","slice","handleEdit","editName","editCurrentWeight","editHeight","handleOption","index","updatedForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","item","alt","src","width","handleEditProcess","handleDelete","_c","$RefreshReg$"],"sources":["/home/arun/Sharly/MyApp/src/Gymform.js"],"sourcesContent":["// import { useState } from 'react'\n// const Weightage = () => {\n//     const [name, setName] = useState('')\n//     const [address, setAddress] = useState('')\n//     const [currentWeight, setCurrentWeight] = useState('');\n//     const [desiredWeight, setDesiredWeight] = useState('');\n//     const [height, setHeight] = useState('');\n//     const [issubmit, setIssubmit] = useState(false)\n//     const [form, setForm] = useState([]);\n//     const [selectedOption, setSelectedOption] = useState(false);\n//     const [editIndex, setEditIndex] = useState(false);\n//     const [editName, setEditName] = useState('');\n//     const [editAddress, setEditAddress] = useState('');\n//     const [editCurrentWeight, setEditCurrentWeight] = useState('');\n//     const [editDesiredWeight, setEditDesiredWeight] = useState('');\n//     const [editHeight, setEditHeight] = useState('')\n\n//     const handleSubmit = () => {\n//         setIssubmit(true)\n//         if (currentWeight > 100) {\n//             alert(\" current weight Not Greater than 100\")\n//         }\n\n//         else if (currentWeight < 100) {\n//             if (name === '') {\n//                 alert(\"member name is not filled\")\n\n//             }\n//             if (height > 600) {\n//                 alert(\"Height enterd in centemeter\")\n\n//             }\n//             if (desiredWeight > 100) {\n//                 alert(\"desired weight Not Greater than 100\")\n//             }\n//             if (address == null) {\n//                 alert(\"please entered valid address\")\n//             }\n//             if ((name !== '') && (address !== '') && (currentWeight !== '') && (desiredWeight !== '') && (height !== '')) {\n//                 weightArray.push(parseInt(currentWeight))\n//                 console.log(weightArray)\n//                 const user = { name, address, currentWeight, desiredWeight, height };\n//                 setForm([...form, user]);\n//                 setName('');\n//                 setAddress('');\n//                 setCurrentWeight('');\n//                 setDesiredWeight('');\n//                 setHeight('')\n//             }\n\n//         }\n//     };\n\n//     const handleOption = (index) => {\n//         const updatedForm = [...form]\n//         updatedForm[index].selectedOption = !updatedForm[index].selectedOption;\n//         setForm(updatedForm)\n//         setSelectedOption(!selectedOption);\n//     };\n\n//     const handleDelete = (index) => {\n//         const updatedForm = [...form];\n//         updatedForm.splice(index, 1);\n//         setForm(updatedForm);\n\n//     };\n\n//     const handleEdit = () => {\n//         if (editCurrentWeight > 100) {\n//             alert('Weightage count not greater than 100');\n//         } else if (editCurrentWeight < 100) {\n//             if ((editName !== \"\") && (editAddress !== \"\") && (editCurrentWeight !== \"\") && (editDesiredWeight !== \"\") && (editHeight !== \"\")) {\n//                 const updatedForm = [...form];\n//                 updatedForm[editIndex] = {\n//                     name: editName,\n//                     address: editAddress,\n//                     currentWeight: editCurrentWeight,\n//                     desiredWeight: editDesiredWeight,\n//                     height: editHeight\n\n//                 };\n//                 setForm(updatedForm);\n//                 setEditIndex(false);\n//                 setEditName('');\n//                 setEditAddress('');\n//                 setEditCurrentWeight('');\n//                 setEditDesiredWeight('');\n//                 setEditHeight('');\n//             }\n//         }\n//     };\n\n\n//     const handleEditProcess = (index) => {\n//         if (index !== false) {\n//             setEditIndex(index);\n//             const editedItem = form[index];\n//             setEditName(editedItem.name);\n//             setEditAddress(editedItem.email);\n//             setEditCurrentWeight(editedItem.currentWeight);\n//             setEditDesiredWeight(editedItem.desiredWeight);\n//             setEditHeight(editedItem.height);\n//             setSelectedOption(!selectedOption);\n\n//         }\n//     }\n\n//     return (\n//         <>\n\n\n//             <div className=\"container-fluid m-3 bg-lite \">\n//                 <div className=\"column\">\n//                     <div className=\"mt-5\">\n//                         <h2>GYM Membership Form</h2>\n//                         <div className='row mt-5 '>\n//                             <div className='column m-3'>\n//                                 <label className=\"d-flex  align-items-center\">Name:</label>\n//                                 <input type='text' value={editIndex !== false ? editName : name} onChange={(e) => (editIndex !== false ? setEditName(e.target.value) : setName(e.target.value))}></input>\n//                             </div>\n\n//                             <div className='column m-3'>\n//                                 <label className=\"d-flex  align-items-center \">CurrentWeight (kg)*:</label>\n//                                 <input value={editIndex !== false ? editCurrentWeight : currentWeight} type='number' onChange={(e) => (editIndex !== false ? setEditCurrentWeight(e.target.value) : setCurrentWeight(e.target.value))}></input>\n//                             </div>\n\n//                             <div className='column m-3'>\n//                                 <label className=\"d-flex  align-items-center \">Height in(cm)*:</label>\n//                                 <input value={editIndex !== false ? editHeight : height} type='number' onChange={(e) => (editIndex !== false ? setEditHeight(e.target.value) : setHeight(e.target.value))}></input>\n//                             </div>\n\n//                         </div>\n//                         <div className='w-30 h-30 d-flex' >\n\n//                             <button className='btn btn-primary' onClick={editIndex !== false ? handleEdit : handleSubmit} type='submit' >{editIndex !== false ? 'UPDATE' : 'SUBMIT'}</button>\n\n//                         </div>\n\n\n//                     </div>\n//                     <div className=\"col-12 mt-5\" >\n//                         <table className='table'>\n\n//                             <tr className='table-active'>\n//                                 <th >Name</th>\n//                                 <th >CurrentWeight</th>\n//                                 <th> Height </th>\n\n//                             </tr>\n\n//                             {issubmit && form.map((item, index) => {\n\n//                                 return (\n//                                     <tbody >\n//                                         <tr >\n//                                             <td >{item.name} </td>\n//                                             <td >{item.currentWeight}</td>\n//                                             <td >{item.height}</td>\n//                                             <tr>\n//                                                 <div onClick={() => { handleOption(index); }}>\n//                                                     <img alt='three dots' src='https://w7.pngwing.com/pngs/948/504/png-transparent-computer-icons-material-design-hamburger-button-menu-menu-text-rectangle-computer-wallpaper-thumbnail.png' height='20' width='20'></img></div>\n//                                                 {item.selectedOption &&\n//                                                     <div className='menu-options'>\n//                                                         <div className='option' onClick={() => handleEditProcess(index)}>Edit</div>\n//                                                         <div className='option' onClick={() => handleDelete(index)}>Delete</div>\n//                                                     </div>\n//                                                 }\n\n//                                             </tr>\n//                                         </tr>\n//                                     </tbody>\n//                                 )\n//                             })}\n\n\n//                         </table>\n//                     </div>\n//                 </div>\n\n//             </div>\n//         </>\n\n//     )\n// }\n// export default Weightage;\n\nimport React, { useState } from \"react\";\nfunction Formfilled() {\n    let user = {};\n\n    const [arr, setArr] = useState([])\n    const [editIndex, setEditIndex] = useState(false)\n    const [issubmit, setIssubmit] = useState(false)\n    const [selectedOption, setSelectedOption] = useState(false)\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(user);\n        setArr([...arr, user])\n        user = { name: \"\", currentWeight: \"\", height: \"\" }\n        setIssubmit(true)\n        if (user.currentWeight > 100) {\n            alert(\" current weight Not Greater than 100\")\n        }\n        if (user.currentWeight < 100) {\n            if (user.name === '') {\n                alert(\"member name is not filled\")\n\n            }\n            if (user.height > 600) {\n                alert(\"Height enterd in centemeter\")\n\n            }\n\n        }\n    };\n    console.log(arr);\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        console.log(name)\n        user[name] = value\n    }\n\n    function handleWeightChange(e) {\n        const { name } = e.target\n        if (e.target.value.length > e.target.maxLength) {\n            e.target.value = e.target.value.slice(0, e.target.maxLength)\n            user[name] = e.target.value\n        }\n\n    }\n    function handleEdit(e) {\n        e.preventDefault()\n        setArr([...arr, user]);\n        user = { editName: \"\", editCurrentWeight: \"\", editHeight: \"\" };\n        setEditIndex(false);\n    }\n\n\n    const handleOption = (index) => {\n        const updatedForm = [...arr]\n        updatedForm[index].selectedOption = !updatedForm[index].selectedOption;\n        setArr(updatedForm)\n        setSelectedOption(!selectedOption);\n    };\n\n    return (\n\n        <div className=\"container-fluid m-3 bg-lite \">\n            <div className=\"column\">\n                <div className=\"mt-5\">\n                    <h2>GYM Membership Form</h2>\n                    <div className='row mt-5 '>\n                        <div className='column m-3'>\n                            <label className=\"d-flex  align-items-center\">Name:</label>\n                            <input type='text' name=\"name\" value={user.name} maxLength={15} onChange={handleChange}></input>\n                        </div>\n\n                        <div className='column m-3'>\n                            <label className=\"d-flex  align-items-center \">CurrentWeight (kg)*:</label>\n                            <input type=\"number\" name=\"currentWeight\" value={user.currentWeight} maxLength={2} onChange={handleWeightChange}></input>\n                        </div>\n\n                        <div className='column m-3'>\n                            <label className=\"d-flex  align-items-center \">Height in(cm)*:</label>\n                            <input type=\"number\" name=\"height\" value={user.height} maxLength={3} onChange={handleWeightChange}></input>\n                        </div>\n\n                    </div>\n                    <div className='w-30 h-30 d-flex' >\n                        <button className='btn btn-primary' onClick={editIndex !== false ? handleEdit : handleSubmit} type='submit' >{editIndex !== false ? 'UPDATE' : 'SUBMIT'}</button>\n\n                    </div>\n                </div>\n                <div className=\"col-12 mt-5\" >\n//                         <table className='table'>\n\n//                             <tr className='table-active'>\n//                                 <th >Name</th>\n//                                 <th >CurrentWeight</th>\n//                                 <th> Height </th>\n\n//                             </tr>\n\n//                             {issubmit && arr.map((item, index) => {\n\n                    return (\n                        <tbody >\n                            <tr >\n                                <td >{item.name} </td>\n                                <td >{item.currentWeight}</td>\n                                <td >{item.height}</td>\n                                <tr>\n                                    <div onClick={() => { handleOption(index); }}>\n                                        <img alt='three dots' src='https://w7.pngwing.com/pngs/948/504/png-transparent-computer-icons-material-design-hamburger-button-menu-menu-text-rectangle-computer-wallpaper-thumbnail.png' height='20' width='20'></img></div>\n                                    {item.selectedOption &&\n                                        <div className='menu-options'>\n                                            <div className='option' onClick={() => handleEditProcess(index)}>Edit</div>\n                                            <div className='option' onClick={() => handleDelete(index)}>Delete</div>\n                                        </div>\n                                    }\n\n                                </tr>\n                            </tr>\n                        </tbody>\n                    )\n                })}\n\n\n                    </table>\n                </div>\n            </div>\n        </div >\n    );\n}\nexport default Formfilled;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,IAAIC,IAAI,GAAG,CAAC,CAAC;EAEb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;IACjBE,MAAM,CAAC,CAAC,GAAGD,GAAG,EAAED,IAAI,CAAC,CAAC;IACtBA,IAAI,GAAG;MAAEc,IAAI,EAAE,EAAE;MAAEC,aAAa,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IAClDV,WAAW,CAAC,IAAI,CAAC;IACjB,IAAIN,IAAI,CAACe,aAAa,GAAG,GAAG,EAAE;MAC1BE,KAAK,CAAC,sCAAsC,CAAC;IACjD;IACA,IAAIjB,IAAI,CAACe,aAAa,GAAG,GAAG,EAAE;MAC1B,IAAIf,IAAI,CAACc,IAAI,KAAK,EAAE,EAAE;QAClBG,KAAK,CAAC,2BAA2B,CAAC;MAEtC;MACA,IAAIjB,IAAI,CAACgB,MAAM,GAAG,GAAG,EAAE;QACnBC,KAAK,CAAC,6BAA6B,CAAC;MAExC;IAEJ;EACJ,CAAC;EACDL,OAAO,CAACC,GAAG,CAACZ,GAAG,CAAC;EAEhB,SAASiB,YAAYA,CAACR,KAAK,EAAE;IACzB,MAAM;MAAEI,IAAI;MAAEK;IAAM,CAAC,GAAGT,KAAK,CAACU,MAAM;IACpCR,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACjBd,IAAI,CAACc,IAAI,CAAC,GAAGK,KAAK;EACtB;EAEA,SAASE,kBAAkBA,CAACC,CAAC,EAAE;IAC3B,MAAM;MAAER;IAAK,CAAC,GAAGQ,CAAC,CAACF,MAAM;IACzB,IAAIE,CAAC,CAACF,MAAM,CAACD,KAAK,CAACI,MAAM,GAAGD,CAAC,CAACF,MAAM,CAACI,SAAS,EAAE;MAC5CF,CAAC,CAACF,MAAM,CAACD,KAAK,GAAGG,CAAC,CAACF,MAAM,CAACD,KAAK,CAACM,KAAK,CAAC,CAAC,EAAEH,CAAC,CAACF,MAAM,CAACI,SAAS,CAAC;MAC5DxB,IAAI,CAACc,IAAI,CAAC,GAAGQ,CAAC,CAACF,MAAM,CAACD,KAAK;IAC/B;EAEJ;EACA,SAASO,UAAUA,CAACJ,CAAC,EAAE;IACnBA,CAAC,CAACX,cAAc,CAAC,CAAC;IAClBT,MAAM,CAAC,CAAC,GAAGD,GAAG,EAAED,IAAI,CAAC,CAAC;IACtBA,IAAI,GAAG;MAAE2B,QAAQ,EAAE,EAAE;MAAEC,iBAAiB,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAC;IAC9DzB,YAAY,CAAC,KAAK,CAAC;EACvB;EAGA,MAAM0B,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,WAAW,GAAG,CAAC,GAAG/B,GAAG,CAAC;IAC5B+B,WAAW,CAACD,KAAK,CAAC,CAACxB,cAAc,GAAG,CAACyB,WAAW,CAACD,KAAK,CAAC,CAACxB,cAAc;IACtEL,MAAM,CAAC8B,WAAW,CAAC;IACnBxB,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACtC,CAAC;EAED,oBAEIV,OAAA;IAAKoC,SAAS,EAAC,8BAA8B;IAAAC,QAAA,eACzCrC,OAAA;MAAKoC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBrC,OAAA;QAAKoC,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBrC,OAAA;UAAAqC,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BzC,OAAA;UAAKoC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACtBrC,OAAA;YAAKoC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBrC,OAAA;cAAOoC,SAAS,EAAC,4BAA4B;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3DzC,OAAA;cAAO0C,IAAI,EAAC,MAAM;cAACzB,IAAI,EAAC,MAAM;cAACK,KAAK,EAAEnB,IAAI,CAACc,IAAK;cAACU,SAAS,EAAE,EAAG;cAACgB,QAAQ,EAAEtB;YAAa;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/F,CAAC,eAENzC,OAAA;YAAKoC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBrC,OAAA;cAAOoC,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3EzC,OAAA;cAAO0C,IAAI,EAAC,QAAQ;cAACzB,IAAI,EAAC,eAAe;cAACK,KAAK,EAAEnB,IAAI,CAACe,aAAc;cAACS,SAAS,EAAE,CAAE;cAACgB,QAAQ,EAAEnB;YAAmB;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxH,CAAC,eAENzC,OAAA;YAAKoC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBrC,OAAA;cAAOoC,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtEzC,OAAA;cAAO0C,IAAI,EAAC,QAAQ;cAACzB,IAAI,EAAC,QAAQ;cAACK,KAAK,EAAEnB,IAAI,CAACgB,MAAO;cAACQ,SAAS,EAAE,CAAE;cAACgB,QAAQ,EAAEnB;YAAmB;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1G,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC,eACNzC,OAAA;UAAKoC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC7BrC,OAAA;YAAQoC,SAAS,EAAC,iBAAiB;YAACQ,OAAO,EAAEtC,SAAS,KAAK,KAAK,GAAGuB,UAAU,GAAGjB,YAAa;YAAC8B,IAAI,EAAC,QAAQ;YAAAL,QAAA,EAAG/B,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG;UAAQ;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNzC,OAAA;QAAKoC,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAE,6BACnB,eAAArC,OAAA;UAAOoC,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,iCAErB,eAAArC,OAAA;YAAIoC,SAAS,EAAC,cAAc;YAAAC,QAAA,GAAC,qCACzB,eAAArC,OAAA;cAAAqC,QAAA,EAAK;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,uCACd,eAAAzC,OAAA;cAAAqC,QAAA,EAAK;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,uCACvB,eAAAzC,OAAA;cAAAqC,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,mCAErB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,mCAEL,EAACjC,QAAQ,IAAIJ,GAAG,CAACyC,GAAG,CAAC,CAACC,IAAI,EAAEZ,KAAK,KAAK;YAEjD,oBACIlC,OAAA;cAAAqC,QAAA,eACIrC,OAAA;gBAAAqC,QAAA,gBACIrC,OAAA;kBAAAqC,QAAA,GAAMS,IAAI,CAAC7B,IAAI,EAAC,GAAC;gBAAA;kBAAAqB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACtBzC,OAAA;kBAAAqC,QAAA,EAAMS,IAAI,CAAC5B;gBAAa;kBAAAoB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC9BzC,OAAA;kBAAAqC,QAAA,EAAMS,IAAI,CAAC3B;gBAAM;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvBzC,OAAA;kBAAAqC,QAAA,gBACIrC,OAAA;oBAAK4C,OAAO,EAAEA,CAAA,KAAM;sBAAEX,YAAY,CAACC,KAAK,CAAC;oBAAE,CAAE;oBAAAG,QAAA,eACzCrC,OAAA;sBAAK+C,GAAG,EAAC,YAAY;sBAACC,GAAG,EAAC,+JAA+J;sBAAC7B,MAAM,EAAC,IAAI;sBAAC8B,KAAK,EAAC;oBAAI;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EAChOK,IAAI,CAACpC,cAAc,iBAChBV,OAAA;oBAAKoC,SAAS,EAAC,cAAc;oBAAAC,QAAA,gBACzBrC,OAAA;sBAAKoC,SAAS,EAAC,QAAQ;sBAACQ,OAAO,EAAEA,CAAA,KAAMM,iBAAiB,CAAChB,KAAK,CAAE;sBAAAG,QAAA,EAAC;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC3EzC,OAAA;sBAAKoC,SAAS,EAAC,QAAQ;sBAACQ,OAAO,EAAEA,CAAA,KAAMO,YAAY,CAACjB,KAAK,CAAE;sBAAAG,QAAA,EAAC;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGV,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAEhB,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAACvC,EAAA,CAhIQD,UAAU;AAAAmD,EAAA,GAAVnD,UAAU;AAiInB,eAAeA,UAAU;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}